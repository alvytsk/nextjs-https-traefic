version: '3.8'

services:
  app:
    restart: unless-stopped
    build:
      context: ./
      target: dev
      dockerfile: Dockerfile
    volumes:
      - ./:/app
      - /app/.next
      - /app/node_modules
    ports:
      - 3000:3000
    environment:
      NODE_ENV: development
    networks:
      - next-app-network
    labels:
      - "traefik.http.routers.next-dev.tls=true"
      - "traefik.http.routers.next-dev.rule=Host(`next-dev.traefik.me`)"
      - "traefik.http.routers.next-dev-tls.tls.domains[0].main=next-dev.traefik.me"
      - "traefik.http.routers.next-dev-tls.tls.domains[0].sans=next-dev-*.traefik.me"

  traefik:
    image: traefik:2.10
    ports:
      - 80:80
      - 443:443
    labels:
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
    volumes:
      - ./tools/traefik/traefik.yml:/etc/traefik/traefik.yml
      - ./tools/traefik/tls.yml:/etc/traefik/tls.yml
      - /var/run/docker.sock:/var/run/docker.sock
      - certs:/etc/ssl/traefik
    networks:
      - next-app-network

  reverse-proxy-https-helper:
    image: alpine
    command: sh -c "cd /etc/ssl/traefik
      && wget traefik.me/cert.pem -O cert.pem
      && wget traefik.me/privkey.pem -O privkey.pem"
    volumes:
      - certs:/etc/ssl/traefik
    networks:
      - next-app-network

networks:
  next-app-network:
    driver: bridge

volumes:
  certs: